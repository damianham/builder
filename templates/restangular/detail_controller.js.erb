<% 
# shorten the accessor name
singlename = singular_table_name
%>
  // detail controller - generated from builder/templates/restangular/detail_controller.js.erb
angular.module('<%= appname || namespace || "mainapp" %>')
 // enclose dependencies as strings within brackets to avoid minification and create the
 // controller as an anonymous function
 .controller('<%= model_name %>DetailCtrl', [ '$scope', '$stateParams',   'Restangular', 'CurrentUser'   
    , function($scope, $stateParams,  Restangular, CurrentUser) {
      
    Restangular.one('<%= plural_table_name %>', $stateParams.<%= singlename %>Id).get().then(function(<%= singlename %>){
      $scope.<%= singlename %> = <%= singlename %>;

      // get related objects  - enable/delete as appropriate
      //*
      <%   
        table_info['belongs_to'].flatten.uniq.each do |key| 
          relation = key.singularize
      %>
      // 
      $scope.<%= singlename %>.customGET("related", {relation: "<%= relation %>"}).then(function(<%= relation %>) {
        $scope.<%= singlename %>_<%= relation %> = <%= relation %>;
        <% if relation == 'user' %>
        CurrentUser.getUser(function (data) {
          $scope.current_user = data;

          if ($scope.<%= singlename %>_<%= relation %>.id === $scope.current_user.id) {
            $scope.can_edit = true;
            $scope.can_delete = true;
          }
          // get data related to the user, e.g.
          //$scope.photos = UserResource.related({userId: $scope.current_user.id, relation: 'photos'});

        });
        <% end %>
      });
      <%  end %>
      <%   
        table_info['has_many'].flatten.uniq.each do |key| 
          relation = key
      %>
      // requires adding nested resource routes e.g. <%= plural_table_name %>/1/<%= relation %>
      $scope.<%= singlename %>.getList('<%= relation %>').then(function(<%= relation %>) {
        $scope.<%= singlename %>_<%= relation %> = <%= relation %>;
      });
      <%  end %>
      //*/
    });

  }]);
 // end detail controller   