<% 

# shorten this
singlename = singular_table_name

rejected_columns = fields.fetch(:except,['id','updated_at','created_at'])

field_names = field_list.reject{|col_name| rejected_columns.include?(col_name.to_sym)}

# override the defaults with a given field list
unless this_fields[:detail].nil?
  field_names = this_fields[:detail].map{|name| name.to_s  }

  # get the name of the principle field
  namefield_name = field_names.select{|name| ['name','title'].include?(name)}.first 

  # and the description field
  descfield_name = field_names.select{|name|['description','info',
      'summary','comment','snippet'].include?(name) }.first
  end

unless namefield_name.nil?
  #remove from the list, no need to display twice
  field_names.reject!{|name| name == namefield_name}
  end

unless descfield_name.nil?
  #remove from the list, no need to display twice
  field_names.reject!{|name| name == descfield_name}
  end

%>
<!--  - generated from builder/templates/ng/partial-detail.html.erb -->
<div class="container">
  <div class="object-detail-container <%= singlename %>-detail-container">
    <!--
            enable and rename accordingly if the class has a main image
    <img ng-src="{{<%= singlename %>.image}}" class="object-image object-detail-image <%= singlename %>-image <%= singlename %>-detail-image">
    -->

    <% unless namefield_name.nil? %>
      <h1>{{<%= singlename %>.<%= namefield_name %>}}</h1>
    <% end %>

    <% unless descfield_name.nil? %>
      <p>{{<%= singlename %>.<%= descfield_name %>}}</p>
    <% end %>

    <!--          
            enable and rename accordingly if the class has an array of images
    <ul class="<%= singlename %>-thumbs">
      <li ng-repeat="img in <%= singlename %>.images">
        <img ng-src="{{img}}" ng-click="setImage(img) class="object-image-set object-detail-image-set <%= singlename %>-image-set <%= singlename %>-detail-image-set">
      </li>
    </ul>
    -->

    <div class="object-detail-table <%= singlename %>-detail-table">
      <span class="object-detail"><%= model_name.titleize %> Detail</span>

      <table class="<%= singlename %>-table detail-table">
        <tbody>
          <% field_names.each do |key| %>
            <tr>
              <th><%= key.titleize %> </th>
              <td class='<%= singlename %>-<%= key %>'>{{<%= singlename %>.<%= key %>}}</td>
            </tr>
          <% end %>

        </tbody>

      </table>

      <!-- include the standard links   [back, edit, new, delete, history] -->
      <div style="margin-top: 10px;">
        <a class="btn btn-inverse" href="<%= angular_url(plural_table_name) %>">Back</a> 
        <span ng-if="can_edit == true">
          <a class="btn btn-warning" href="<%= angular_url(plural_table_name) %>/{{ <%= singlename %>.id }}/edit" >Edit</a>
        </span>
        <a class="btn btn-success" href="<%= angular_url(plural_table_name) %>/new" >New</a>
        <span ng-if="can_delete == true">
          <a class="btn btn-danger" href="<%= angular_url(plural_table_name) %>/{{ <%= singlename %>.id }}/delete" data-confirm='Are you sure?'>Delete</a>
        </span>
        <!--
          <a class="btn btn-primary" href="<%= angular_url(plural_table_name) %>/{{ <%= singlename %>.id }}/history" >History</a>

        -->

      </div>
    </div>
  </div>
</div>

<hr/>

<div class="container-fluid">
  <h1>Related Objects</h1>

  <% 
  #  get related objects  
  table_info['belongs_to'].flatten.uniq.each do |key| 
    relation = key.singularize

    columns = schema[key]['columns']
    field_names = columns.keys.reject{|key| rejected_columns.include?(key)  }

    myfields = fields.fetch(:list,Hash.new).fetch(key.to_sym,nil)

    unless myfields.nil?
      field_names = myfields.map{|name| name.to_s  }
      end
  %>
    <div class="container related-objects belongs-to-related-objects <%= key %>-related-objects">
      <h2><%= key.to_model_name %></h2>
      <table class="<%= relation %>-table list-table table-striped">

        <tr>
          <td>
            <a href="/#/<%= namespace.nil? ? "" : namespace + '/' %><%= key %>/{{<%= singlename %>_<%= relation %>.id}}" >
              <i class="glyphicon glyphicon-search"></i>  view
            </a>
          </td>
          <td></td>
        </tr>

        <% field_names.each do |key| %>
          <tr>
            <th><%= key.titleize %> </th>
            <td>{{<%= singlename %>_<%= relation %>.<%= key %>}}</td>
          </tr>
        <% end %>

      </table>
    </div>
  <%  end %>

  <%
  table_info['has_many'].flatten.uniq.each do |key| 
    relation = key.pluralize
    relname = key.singularize
    columns = schema[key]['columns']
    field_names = columns.keys.reject{|key| rejected_columns.include?(key)  }

    myfields = fields.fetch(:list,Hash.new).fetch(key.to_sym,nil)

    unless myfields.nil?
      field_names = myfields.map{|name| name.to_s  }
      end
  %>
    <div class="container related-objects has-many-related-objects <%= key %>-related-objects">
      <h2><%= key.to_model_name.pluralize %></h2>
      <table class="<%= relname %>-table list-table table-striped">
        <thead>
          <tr>

            <th><!-- link column --></th>

            <% field_names.each do |key| %>
              <th><%= key.titleize %> </th>
            <% end %>
          </tr>
        </thead>

        <tbody> 
          <tr ng-repeat="<%= relname %> in <%= singlename %>_<%= relation %>  |  limitTo: 50" ng-class="rowClass(<%= relname %>)">

            <td>
              <a href="/#/<%= namespace.nil? ? "" : namespace + '/' %><%= key %>/{{<%= relname %>.id}}" >
                <i class="glyphicon glyphicon-search"></i>
              </a>
            </td>

            <% field_names.each do |key| %>
              <td>{{<%= relname %>.<%= key %>}}</td>
            <% end %>
          </tr>
        </tbody>

      </table>
    </div>
  <%  end %>
</div>